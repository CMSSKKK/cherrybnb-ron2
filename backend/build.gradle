buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'

    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {

    /* Spring-Boot */
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /* Spring-Data-JDBC */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'

    /* Lombok */
    implementation 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok"

    /* Mysql */
    runtimeOnly 'mysql:mysql-connector-java'

    /* AssertJ */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* Springfox */
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    /* Hibernate Spatial */
    implementation 'org.hibernate:hibernate-spatial:5.6.8.Final'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    /* proj4 */
    implementation 'org.locationtech.proj4j:proj4j:1.1.5'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.6.8'


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    /* Jackson */
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.2'

    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.77.Final:osx-aarch_64'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

 querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
 }
 sourceSets {
    main.java.srcDir querydslDir
 }
 configurations {
    querydsl.extendsFrom compileClasspath
 }
 compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
 }
